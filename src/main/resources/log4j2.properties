status = error
dest = out
name = Utility

# Give directory path where log files should get stored
property.basePath = ./logs
property.filename = utility.log

# Direct log messages to stdout
appender.console.type = Console
appender.console.name = LogToConsole
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

# Direct log messages to a log file
# Rotate log file
appender.rolling.type = RollingFile
appender.rolling.name = LogToRollingFile
appender.rolling.fileName = ${basePath}/${filename}
appender.rolling.filePattern = ${basePath}/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d %p %C{1.} [%t] %m%n

appender.rolling.policies.type = Policies
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=10MB

appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 10

# Rotate log file each day and keep 30 days worth
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 1
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified

# Delete files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 1
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified
# Delete files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d

# Log to console and rolling file for specific package
#logger.app.name = Test
#logger.app.level = debug
#logger.app.additivity = false
#logger.app.appenderRef.rolling.ref = LogToRollingFile
#logger.app.appenderRef.console.ref = LogToConsole

# Log to console and rolling file for all other packages
rootLogger.level = trace
rootLogger.appenderRef.console.ref = LogToConsole
rootLogger.appenderRef.rolling.ref = LogToRollingFile